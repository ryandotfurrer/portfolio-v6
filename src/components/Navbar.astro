---
import { ModeToggle } from './react/ModeToggle';
import { NavLinks } from '../utils/utils';
import Link from './Link.astro';
import MobileMenu from './react/MobileMenu.tsx';
---

<nav
  class="bg-card border-border flex w-full items-center justify-between rounded-lg border p-4"
>
  <Link
    href="/"
    class="text-foreground flex items-center gap-2 font-sans text-3xl font-semibold tracking-tight transition-transform duration-500 ease-(--spring-small) hover:scale-110 hover:no-underline active:scale-95"
  >
    <img src="/logo.svg" class="size-10" />
  </Link>
  <div>
    <ul class="hidden gap-4 md:flex">
      {
        NavLinks.map((link) => (
          <li>
            {link.label !== 'contact' && (
              <Link
                href={link.href}
                class:list={['nav-link', { 'hover:no-underline': true }]}
                data-href={link.href}
              >
                {link.label}
              </Link>
            )}
          </li>
        ))
      }
    </ul>
  </div>

  <div class="ml-auto flex items-center gap-4 md:ml-0">
    <ModeToggle client:only="react" className="max-sm:hidden" />

    <Link
      href="/contact"
      variant="primary"
      size="sm"
      class="hidden lowercase md:flex"
    >
      Contact
    </Link>
  </div>
  <MobileMenu client:load />
</nav>

<script>
  function updateActiveLinks() {
    const links = document.querySelectorAll('.nav-link');
    links.forEach((link) => {
      if (link instanceof HTMLElement) {
        link.classList.remove(
          'underline',
          'decoration-accent',
          'hover:no-underline',
        );

        const currentPath = window.location.pathname;
        const linkPath = link.dataset.href;
        const isActive =
          linkPath === currentPath ||
          (linkPath === '/writing' && currentPath.startsWith('/writing/')) ||
          (linkPath === '/speaking' && currentPath.startsWith('/speaking/')) ||
          (linkPath === '/about' && currentPath.startsWith('/about/')) ||
          (linkPath === '/projects' && currentPath.startsWith('/projects/'));

        if (isActive) {
          link.classList.add('underline', 'decoration-accent');
        } else {
          link.classList.add('hover:no-underline');
        }
      }
    });
  }

  updateActiveLinks();

  document.addEventListener('astro:page-load', updateActiveLinks);
</script>
