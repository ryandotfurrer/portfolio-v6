---
import { cn } from '../utils/utils';
import { cva, type VariantProps } from 'class-variance-authority';
import { ArrowLeft, ArrowRight, ExternalLink } from 'lucide-react';
const linkVariants = cva(
  'cursor-pointer inline-flex items-center justify-center gap-2 rounded-md text-base ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&>[data-icon]]:pointer-events-none [&>[data-icon]]:size-4 [&>[data-icon]]:shrink-0 group',
  {
    variants: {
      variant: {
        default:
          'text-foreground-muted underline-offset-4 hover:underline hover:text-foreground',
        primary:
          'bg-primary shadow-xs border border-primary/50 text-primary-foreground hover:bg-primary/90 active:bg-primary/80',
        secondary:
          'bg-secondary shadow-xs border border-secondary/50 text-secondary-foreground active:bg-secondary/70',
        outline:
          'border border-border/80 shadow-xs bg-card hover:bg-secondary/80 hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',
        ghost:
          'hover:bg-accent shadow-xs hover:text-accent-foreground active:bg-accent/80',
        destructive:
          'bg-destructive shadow-xs border border-destructive/50 text-destructive-foreground hover:bg-destructive/90 active:bg-destructive/80',
        warning:
          'bg-warning shadow-xs border border-warning/50 text-warning-foreground hover:bg-warning/90 active:bg-warning/80',
        success:
          'bg-success shadow-xs border border-success/50 text-success-foreground hover:bg-success/90 active:bg-success/80',
        tag: 'bg-muted text-foreground-muted rounded-sm hover:text-foreground text-xs p-1',
      },
      size: {
        default: '',
        button: 'h-10 px-4 py-2',
        sm: 'h-9 rounded-md px-3',
        lg: 'h-11 rounded-md px-8',
        icon: 'h-10 w-10',
      },
    },
    defaultVariants: {
      variant: 'default',
      size: 'default',
    },
  },
);

export interface Props extends VariantProps<typeof linkVariants> {
  'on:click'?: (e: Event) => void;
  [key: string]: any;
  class?: string;
  disabled?: boolean;
  externalLink?: boolean;
  href: string;
  iconPosition?: 'left' | 'right';
  withIcon?: boolean;
}

// @ts-ignore - Astro's type system limitation
const {
  class: className,
  variant,
  size,
  href,
  externalLink = false,
  withIcon = false,
  disabled = false,
  iconPosition = 'right',
  'on:click': onclick,
  ...props
} = Astro.props;

const externalProps =
  externalLink ?
    {
      target: '_blank',
      rel: 'noopener noreferrer',
    }
  : {};
---

<a
  href={href}
  class={cn(
    linkVariants({ variant, size, className }),
    (withIcon || externalLink) && 'hover:no-underline',
    disabled && 'opacity-50 cursor-not-allowed',
  )}
  rel={externalLink ? 'noopener noreferrer' : undefined}
  target={externalLink ? '_blank' : undefined}
  {...props}
  aria-disabled={disabled}
  {...onclick ? { 'on:click': onclick } : {}}
>
  {
    iconPosition === 'left' && withIcon && !externalLink && (
      <ArrowLeft className='transition-all md:-translate-x-2 md:opacity-0 md:group-hover:translate-x-0 md:group-hover:opacity-100 md:group-hover/link:translate-x-0 md:group-hover/link:opacity-100 size-5' />
    )
  }
  <slot />
  {
    iconPosition === 'right' && withIcon && !externalLink && (
      <ArrowRight className='transition-all md:-translate-x-2 md:opacity-0 md:group-hover:translate-x-0 md:group-hover:opacity-100 md:group-hover/link:translate-x-0 md:group-hover/link:opacity-100 size-5' />
    )
  }
  {
    externalLink && withIcon && (
      <ExternalLink className='transition-all md:-translate-x-2 md:opacity-0 md:group-hover:translate-x-0 md:group-hover:opacity-100 md:group-hover/link:translate-x-0 md:group-hover/link:opacity-100 size-4' />
    )
  }
</a>

<style>
  :global(main p a[href]) {
    /* color: var(--color-foreground); */
    text-decoration: underline;
  }
</style>
