---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Card from '../components/Card.astro';
import FormattedDate from '~/components/FormattedDate.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';
import type { CollectionEntry } from 'astro:content';

type Props = CollectionEntry<'blog'>['data'];

const blogPosts = await getCollection('blog');
const newsletters = await getCollection('newsletter');

const allWriting = [...blogPosts, ...newsletters].sort(
  (a, b) => (b.data.pubDate?.valueOf() ?? 0) - (a.data.pubDate?.valueOf() ?? 0),
);
const featuredWriting = allWriting.slice(0, 2);

const currentPath = Astro.url.pathname;
---

<section id="featured-writing" class="space-y-8">
  <Heading level="h2" size="3xl">featured writing</Heading>

  <div class="grid grid-cols-1 gap-y-16 md:grid-cols-2 md:gap-x-8 md:gap-y-0">
    {
      featuredWriting.map((post) => (
        <Card
          class="group"
          key={post.id}
          hasLink={true}
          href={
            post.collection === 'newsletter'
              ? post.data.webURL
              : `/writing/${post.id}`
          }
        >
          <div class="bg-card text-foreground flex aspect-video h-full w-full flex-col items-center justify-center overflow-hidden rounded-t-lg">
            <Image
              width={1920}
              height={1080}
              src={post.data.heroImage ?? ''}
              alt={post.data.title}
              class="aspect-video h-full w-full object-fill transition-all md:brightness-90 md:group-hover:brightness-100"
            />
          </div>
          <div class="space-y-4 p-4">
            <header class="flex items-start justify-between gap-x-4">
              <Heading
                level="h3"
                size="lg"
                class="mb-0 flex min-w-0 flex-1 items-center gap-x-4 font-sans"
              >
                {post.data.title}
                {post.collection === 'newsletter' && (
                  <svg
                    data-icon
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="lucide lucide-external-link text-foreground-muted md:text-foreground size-5 transition-all md:-translate-x-2 md:opacity-0 md:group-hover:translate-x-0 md:group-hover:opacity-100 md:group-hover/link:translate-x-0 md:group-hover/link:opacity-100"
                  >
                    <path d="M15 3h6v6" />
                    <path d="M10 14 21 3" />
                    <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                  </svg>
                )}
              </Heading>
              <FormattedDate
                classes="text-sm bg-secondary/50 rounded-sm px-2 py-1 font-medium border whitespace-nowrap flex-shrink-0"
                date={post.data.pubDate ?? new Date()}
              />
            </header>
            <p class="line-clamp-1">{post.data.description}</p>
          </div>
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href="/writing"
        withIcon={true}
        class="group-hover:text-foreground text-lg"
      >
        view all writing
      </Link>
    )
  }
</section>
