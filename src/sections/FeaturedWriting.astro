---
import { getCollection } from 'astro:content';
import Card from '../components/Card.astro';
import FormattedDate from '~/components/FormattedDate.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';
import Tag from '~/components/Tag.astro';
import type { CollectionEntry } from 'astro:content';

type Props = CollectionEntry<'blog'>['data'];

const blogPosts = await getCollection('blog');
const newsletters = await getCollection('newsletters');
const allWriting = [...blogPosts, ...newsletters].sort(
  (a, b) => (b.data.pubDate?.valueOf() ?? 0) - (a.data.pubDate?.valueOf() ?? 0)
);
const featuredWriting = allWriting.slice(0, 2);

const currentPath = Astro.url.pathname;
---

<section id="featured-writing">
  <Heading level="h2" size="3xl">featured writing</Heading>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-y-16 md:gap-y-0 md:gap-x-8">
    {
      featuredWriting.map((post) => (
        <Card class="group" key={post.id} variant="transparent" hasLink={true} href={`/writing/${post.id}`}>
          <header>
            <Heading
              level="h3"
              size="2xl"
              class="group-hover:text-accent transition-all"
            >
              {post.data.title}
            </Heading>
            <FormattedDate
              classes="text-sm"
              date={post.data.pubDate ?? new Date()}
            />
          </header>
          <div class="w-full my-2">
            <img
              src={post.data.heroImage}
              alt={post.data.title}
              class="rounded-md border border-border aspect-video"
            />
          </div>
          <p class="line-clamp-2">{post.data.description}</p>
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="mt-2">
              <ul class="flex flex-wrap gap-2">
                {post.data.tags.map((tag) => (
                  <Tag key={tag} name={tag}>
                    {tag}
                  </Tag>
                ))}
              </ul>
            </div>
          )}
          <div>
            {post.collection === 'blog' ? (
              <>
                <Link
                  href={`/writing/${post.id}`}
                  variant="primary"
                  size="button"
                >
                  Read more
                </Link>
              </>
            ) : (
              <>
                <Link href={post.data.webURL} variant="primary" size="button">
                  Read more
                </Link>
              </>
            )}
          </div>
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href="/writing"
        withIcon={true}
        class="group-hover:text-foreground text-lg"
      >
        view all writing
      </Link>
    )
  }
</section>
