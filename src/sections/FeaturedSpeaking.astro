---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Card from '../components/Card.astro';
import FormattedDate from '~/components/FormattedDate.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';
import Tag from '~/components/Tag.astro';

const speakingCollection = await getCollection('speaking');
const featuredSpeaking = speakingCollection
  .sort(
    (a, b) =>
      (b.data.pubDate?.getTime() ?? 0) - (a.data.pubDate?.getTime() ?? 0),
  )
  .slice(0, 2);

const currentPath = Astro.url.pathname;
---

<section
  id='featured-speaking'
  class='space-y-8'
>
  <Heading
    level='h2'
    size='3xl'
    >featured speaking</Heading
  >

  <div class='grid grid-cols-1 gap-y-16 md:grid-cols-2 md:gap-x-8 md:gap-y-0'>
    {
      featuredSpeaking.map((speakingPost) => (
        <Card
          class='group'
          key={speakingPost.id}
          variant='transparent'
          hasLink={true}
          href={`/speaking/${speakingPost.id}`}
        >
          <header>
            <Heading
              level='h3'
              size='2xl'
            >
              {speakingPost.data.title}
            </Heading>
            <FormattedDate
              classes='text-sm block'
              date={speakingPost.data.pubDate ?? new Date()}
            />
          </header>
          <div class='my-2 w-full'>
            {speakingPost.data.heroImage && (
              <Image
                width={1000}
                height={1000}
                src={speakingPost.data.heroImage ?? ''}
                alt={speakingPost.data.title}
                class='border-border aspect-video rounded-md border brightness-90 transition-all group-hover:brightness-125'
              />
            )}
          </div>
          <p class='line-clamp-2'>{speakingPost.data.description}</p>
          {speakingPost.data.tags && speakingPost.data.tags.length > 0 && (
            <div class='mt-2'>
              <ul class='flex flex-wrap gap-2'>
                {speakingPost.data.tags.map((tag) => (
                  <Tag
                    key={tag}
                    name={tag}
                  >
                    {tag}
                  </Tag>
                ))}
              </ul>
            </div>
          )}
          <div>
            {speakingPost.collection === 'speaking' ?
              <>
                <Link
                  href={`/speaking/${speakingPost.id}`}
                  variant='primary'
                  size='button'
                >
                  Watch now
                </Link>
              </>
            : <>
                <Link
                  href={`/speaking/${speakingPost.id}`}
                  variant='primary'
                  size='button'
                >
                  Watch now
                </Link>
              </>
            }
          </div>
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href='/speaking'
        withIcon={true}
        class='text-foreground-muted group-hover:text-foreground text-lg'
      >
        view all speaking
      </Link>
    )
  }
</section>
