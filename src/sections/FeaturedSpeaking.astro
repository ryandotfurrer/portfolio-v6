---
import { getCollection } from 'astro:content';
import Card from '../components/Card.astro';
import FormattedDate from '~/components/FormattedDate.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';
import Tag from '~/components/Tag.astro';

const speakingCollection = await getCollection('speaking');
const featuredSpeaking = speakingCollection.slice(0, 2);

const currentPath = Astro.url.pathname;
---

<section id="featured-speaking">
  <Heading level="h2" size="3xl">featured speaking</Heading>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    {
      featuredSpeaking.map((speakingPost) => (
        <Card class="group" key={speakingPost.id} variant="transparent" hasLink={true} href={`/speaking/${speakingPost.id}`}>
          <header>
            <Heading
              level="h3"
              size="2xl"
              class="group-hover:text-accent transition-all"
            >
              {speakingPost.data.title}
            </Heading>
            <FormattedDate
              classes="text-sm"
              date={speakingPost.data.pubDate ?? new Date()}
            />
          </header>
          <div class="w-full my-2">
            <img
              src={speakingPost.data.heroImage}
              alt={speakingPost.data.title}
              class="rounded-md border border-border aspect-video"
            />
          </div>
          <p class="line-clamp-2">{speakingPost.data.description}</p>
          {speakingPost.data.tags && speakingPost.data.tags.length > 0 && (
            <div class="mt-2">
              <ul class="flex flex-wrap gap-2">
                {speakingPost.data.tags.map((tag) => (
                  <Tag key={tag} name={tag}>
                    {tag}
                  </Tag>
                ))}
              </ul>
            </div>
          )}
          <div>
            {speakingPost.collection === 'speaking' ? (
              <>
                <Link
                  href={`/speaking/${speakingPost.id}`}
                  variant="primary"
                  size="button"
                >
                  Watch now
                </Link>
              </>
            ) : (
              <>
                <Link
                  href={`/speaking/${speakingPost.id}`}
                  variant="primary"
                  size="button"
                >
                  Watch now
                </Link>
              </>
            )}
          </div>
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href="/speaking"
        withIcon={true}
        class="text-foreground-muted group-hover:text-foreground text-lg"
      >
        view all speaking
      </Link>
    )
  }
</section>
