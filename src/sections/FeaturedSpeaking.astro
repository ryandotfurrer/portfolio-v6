---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Card from '../components/Card.astro';
import FormattedDate from '~/components/FormattedDate.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';
import Tag from '~/components/Tag.astro';

const speakingCollection = await getCollection('speaking');
const featuredSpeaking = speakingCollection
  .sort(
    (a, b) =>
      (b.data.pubDate?.getTime() ?? 0) - (a.data.pubDate?.getTime() ?? 0),
  )
  .slice(0, 2);

const currentPath = Astro.url.pathname;
---

<section id="featured-speaking" class="space-y-8">
  <Heading level="h2" size="3xl">featured speaking</Heading>

  <div class="grid grid-cols-1 gap-y-16 md:grid-cols-2 md:gap-x-8 md:gap-y-0">
    {
      featuredSpeaking.map((speakingPost) => (
        <Card
          class="group"
          key={speakingPost.id}
          hasLink={true}
          href={`/speaking/${speakingPost.id}`}
        >
          <div class="bg-card text-foreground flex aspect-video h-full w-full flex-col items-center justify-center overflow-hidden rounded-t-lg">
            {speakingPost.data.heroImage && (
              <Image
                width={1920}
                height={1080}
                src={speakingPost.data.heroImage ?? ''}
                alt={speakingPost.data.title}
                class="h-full w-full object-cover transition-all md:brightness-90 md:group-hover:brightness-100"
              />
            )}
          </div>
          <div class="space-y-4 p-4">
            <header class="flex items-start justify-between gap-x-4">
              <Heading
                level="h3"
                size="lg"
                class="mb-0 flex min-w-0 flex-1 items-center gap-x-4 font-sans"
              >
                {speakingPost.data.title}
              </Heading>
              <FormattedDate
                classes="text-sm bg-secondary/50 rounded-sm px-2 py-1 font-medium border whitespace-nowrap flex-shrink-0"
                date={speakingPost.data.pubDate ?? new Date()}
              />
            </header>
            <p class="line-clamp-2">{speakingPost.data.description}</p>
          </div>
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href="/speaking"
        withIcon={true}
        class="text-foreground-muted group-hover:text-foreground text-lg"
      >
        view all speaking
      </Link>
    )
  }
</section>
