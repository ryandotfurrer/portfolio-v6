---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Card from '../components/Card.astro';
import FormattedDate from '~/components/FormattedDate.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';
import Tag from '~/components/Tag.astro';

const speakingCollection = await getCollection('speaking');
const featuredSpeaking = speakingCollection
  .sort(
    (a, b) =>
      (b.data.pubDate?.getTime() ?? 0) - (a.data.pubDate?.getTime() ?? 0),
  )
  .slice(0, 2);

const currentPath = Astro.url.pathname;
---

<section id="featured-speaking" class="space-y-8">
  <Heading level="h2" size="3xl">featured speaking</Heading>

  <div class="grid grid-cols-1 gap-y-16 md:grid-cols-2 md:gap-x-8 md:gap-y-0">
    {
      featuredSpeaking.map((speakingPost) => (
        <Card
          class="group"
          key={speakingPost.id}
          hasLink={true}
          href={`/speaking/${speakingPost.id}`}
        >
          <div class="w-full">
            {speakingPost.data.heroImage && (
              <Image
                width={1920}
                height={1080}
                src={speakingPost.data.heroImage ?? ''}
                alt={speakingPost.data.title}
                class="border-border aspect-video rounded-md border transition-all md:brightness-90 md:group-hover:brightness-100"
              />
            )}
          </div>
          <header>
            <Heading level="h3" size="2xl">
              {speakingPost.data.title}
            </Heading>
            <FormattedDate
              classes="text-sm block"
              date={speakingPost.data.pubDate ?? new Date()}
            />
          </header>
          <p class="line-clamp-2">{speakingPost.data.description}</p>
          {speakingPost.data.tags && speakingPost.data.tags.length > 0 && (
            <div class="mt-2">
              <ul class="flex flex-wrap gap-2">
                {speakingPost.data.tags.map((tag) => (
                  <Tag key={tag} name={tag}>
                    {tag}
                  </Tag>
                ))}
              </ul>
            </div>
          )}
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href="/speaking"
        withIcon={true}
        class="text-foreground-muted group-hover:text-foreground text-lg"
      >
        view all speaking
      </Link>
    )
  }
</section>
