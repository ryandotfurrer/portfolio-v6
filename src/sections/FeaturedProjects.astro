---
import { getCollection } from 'astro:content';
import { cn } from '~/utils/utils';
import Card from '../components/Card.astro';
import Heading from '../components/Heading.astro';
import Link from '../components/Link.astro';

const projectCollection = await getCollection('projects');
const featuredProjects = projectCollection
  .sort(
    (a, b) =>
      new Date(b.data.pubDate as unknown as string).getTime() -
      new Date(a.data.pubDate as unknown as string).getTime(),
  )
  .slice(0, 2);

const currentPath = Astro.url.pathname;

type projectStatus = 'shipped' | 'in progress';

const projectStatusConfig = {
  shipped: {
    dotClasses: 'bg-emerald-400 border-emerald-500',
  },
  'in progress': {
    dotClasses: 'bg-amber-400 border-amber-600',
  }
} as const;
---

<section id="featured-projects" class="space-y-8">
  <Heading level="h2" size="3xl">featured projects</Heading>

  <div
    class="text-foreground-muted items-center gap-x-4 text-sm max-sm:space-y-1 md:flex"
  >
    <div class="font-semibold max-sm:mb-2">Project Status:</div>
    <div class="flex items-center gap-1">
      <div
        class={cn(
          'size-3 rounded-full border-2',
          projectStatusConfig.shipped.dotClasses,
        )}
      >
      </div>
      <span>shipped</span>
    </div>
    <div class="flex items-center gap-1">
      <div
        class={cn(
          'size-3 rounded-full border-2',
          projectStatusConfig['in progress'].dotClasses,
        )}
      >
      </div>
      <span>in progress</span>
    </div>
  </div>

  <div class="grid grid-cols-1 gap-y-16 md:grid-cols-2 md:gap-x-8 md:gap-y-0">
    {
      featuredProjects.map((project) => (
        <Card
          class="group"
          key={project.id}
          hasLink={true}
          href={`/projects/${project.id}`}
        >
          <div
            class={`bg-${project.data.mainTech} text-foreground flex aspect-video w-full h-full flex-col items-center justify-center rounded-t-lg overflow-hidden md:brightness-90 md:group-hover:brightness-100 transition`}
            id={`project-${project.id}`}
          >
            <p class="text-2xl font-semibold tracking-tight">
              {project.data.title}
            </p>
            <p>{project.data.descriptionShort}</p>
          </div>
          <div class="space-y-4 p-4">
            <header class="flex justify-between">
              <Heading
                level="h3"
                size="lg"
                class="mb-0 flex items-center gap-x-4 font-sans"
              >
                {project.data.title}
                <div
                  class={cn(
                    'size-3 animate-pulse rounded-full border-2',
                    projectStatusConfig[project.data.status as projectStatus]
                      ?.dotClasses,
                  )}
                />
              </Heading>
              <span class="bg-secondary/50 rounded-sm px-2 py-1 text-sm font-medium border">
                #{project.data.mainTech}
              </span>
            </header>
            <p class="line-clamp-2">{project.data.description}</p>
            <!-- {project.data.tags && project.data.tags.length > 0 && (
              <div class="mt-2">
                <ul class="flex flex-wrap gap-2">
                  {project.data.tags.map((tag) => (
                    <Tag key={tag} name={tag} linkable={true}>
                      {tag}
                    </Tag>
                  ))}
                </ul>
              </div>
            )} -->
          </div>
        </Card>
      ))
    }
  </div>
  {
    currentPath === '/' && (
      <Link
        href="/projects"
        withIcon
        class="text-foreground-muted group-hover:text-foreground text-lg"
      >
        view all projects
      </Link>
    )
  }
</section>
